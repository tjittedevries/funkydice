{
  "version": 3,
  "sources": ["../src/index.ts", "../src/extractCommandFromString.ts", "../src/totals.ts", "../src/rolls.ts", "../src/rand.ts", "../src/dice.ts", "../src/funkydice.ts"],
  "sourcesContent": ["export { funkydie } from \"./funkydice\";\n", "import { ICommand } from \"./types\";\n\nexport function extractCommandFromString(\n  commandString: string\n): ICommand | undefined {\n  const regex = /^([1-9]\\d*)d([1-9]\\d*|f)([+-]\\d+)?$/gim;\n  const regexResults = regex.exec(commandString);\n\n  if (!regexResults) return undefined;\n\n  const faces = regexResults[2] === \"f\" ? \"f\" : parseInt(regexResults[2], 10);\n  const amount = parseInt(regexResults[1], 10);\n  const modifier = regexResults[3] ? parseInt(regexResults[3], 10) : 0;\n\n  return {\n    amount,\n    faces,\n    modifier,\n  };\n}\n", "export function totals(rolls: number[], modifier: number) {\n  const totalUnmodified = rolls.reduce((acc, current) => acc + current, 0);\n  const total = totalUnmodified + modifier;\n\n  return {\n    total,\n    totalUnmodified,\n  };\n}\n\n\nexport function totalsD66(rolls: number[], modifier: number) {\n  const totalUnmodified = parseInt(`${rolls[0]}${rolls[1]}`, 10);\n  const total = totalUnmodified + modifier;\n\n  return {\n    total,\n    totalUnmodified,\n  };\n}\n\n\n", "import { TDieFn } from \"./types\";\n\nexport function rolls(amount: number, dieFn: TDieFn) {\n  const results: number[] = [];\n\n  for (let i = 0; i < amount; i++) {\n    results.push(dieFn());\n  }\n\n  return results;\n}\n", "export function rand(faces: number): number {\n  return Math.floor(Math.random() * faces) + 1;\n}\n", "import { rand } from \"./rand\";\n\nexport function die(faces: number): () => number {\n  return () => rand(faces);\n}\n\nexport function fateDie(): () => number {\n  return () => {\n    const result = rand(3);\n    if (result === 1) return -1;\n    if (result === 3) return 1;\n    return 0;\n  };\n}\n", "import { IResult } from \"./types\";\nimport { extractCommandFromString } from \"./extractCommandFromString\";\nimport { totals, totalsD66 } from \"./totals\";\nimport { rolls } from \"./rolls\";\nimport { die, fateDie } from \"./dice\";\n\nexport function funkydie(commandString: string): IResult | undefined {\n  const command = extractCommandFromString(commandString);\n  if (!command) return undefined;\n\n  const { amount, faces, modifier } = command;\n\n  let rollResults: number[] = [];\n\n  // Change die for Fate oll\n  if (faces === \"f\") {\n    rollResults = rolls(amount, fateDie());\n  // Change die for D66 roll\n  } else if (faces === 66) {\n    rollResults = rolls(2, die(6));\n  // Roll default\n  } else {\n    rollResults = rolls(amount, die(faces));\n  }\n\n  let total: number\n  let totalUnmodified: number;\n\n  // Calculate results for D66 roll\n  if (faces === 66) {\n    ({ total, totalUnmodified } = totalsD66(rollResults, modifier));\n  // Calculate default\n  } else {\n    ({ total, totalUnmodified } = totals(rollResults, modifier));\n  } \n\n  return {\n    amount,\n    faces,\n    modifier,\n    rolls: rollResults,\n    total,\n    totalUnmodified,\n  };\n}\n\nexport function funkydice(commandString: string): (IResult | undefined)[] {\n  const commands = commandString.split(',');\n  return commands.map((command) => funkydie(command));\n}\n"],
  "mappings": "qIAAA,4BCEO,WACL,EACsB,CAEtB,GAAM,GAAe,AADP,yCACa,KAAK,GAEhC,GAAI,CAAC,EAAc,OAEnB,GAAM,GAAQ,EAAa,KAAO,IAAM,IAAM,SAAS,EAAa,GAAI,IAClE,EAAS,SAAS,EAAa,GAAI,IACnC,EAAW,EAAa,GAAK,SAAS,EAAa,GAAI,IAAM,EAEnE,MAAO,CACL,SACA,QACA,YCjBG,WAAgB,EAAiB,EAAkB,CACxD,GAAM,GAAkB,EAAM,OAAO,CAAC,EAAK,IAAY,EAAM,EAAS,GAGtE,MAAO,CACL,MAHY,EAAkB,EAI9B,mBAKG,WAAmB,EAAiB,EAAkB,CAC3D,GAAM,GAAkB,SAAS,GAAG,EAAM,KAAK,EAAM,KAAM,IAG3D,MAAO,CACL,MAHY,EAAkB,EAI9B,mBCfG,WAAe,EAAgB,EAAe,CACnD,GAAM,GAAoB,GAE1B,OAAS,GAAI,EAAG,EAAI,EAAQ,IAC1B,EAAQ,KAAK,KAGf,MAAO,GCTF,WAAc,EAAuB,CAC1C,MAAO,MAAK,MAAM,KAAK,SAAW,GAAS,ECCtC,WAAa,EAA6B,CAC/C,MAAO,IAAM,EAAK,GAGb,YAAiC,CACtC,MAAO,IAAM,CACX,GAAM,GAAS,EAAK,GACpB,MAAI,KAAW,EAAU,GACrB,IAAW,EAAU,EAClB,GCLJ,WAAkB,EAA4C,CACnE,GAAM,GAAU,EAAyB,GACzC,GAAI,CAAC,EAAS,OAEd,GAAM,CAAE,SAAQ,QAAO,YAAa,EAEhC,EAAwB,GAG5B,AAAI,IAAU,IACZ,EAAc,EAAM,EAAQ,KAEvB,AAAI,IAAU,GACnB,EAAc,EAAM,EAAG,EAAI,IAG3B,EAAc,EAAM,EAAQ,EAAI,IAGlC,GAAI,GACA,EAGJ,MAAI,KAAU,GACX,CAAE,QAAO,mBAAoB,EAAU,EAAa,GAGpD,CAAE,QAAO,mBAAoB,EAAO,EAAa,GAG7C,CACL,SACA,QACA,WACA,MAAO,EACP,QACA",
  "names": []
}
